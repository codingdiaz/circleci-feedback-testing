version: 2.1
orbs:
  aws-ecs: circleci/aws-ecs@0.0.8
  aws-cli: circleci/aws-cli@0.1.16
commands:
  run-task:
    description: |
      Starts a new task using the specified task definition and other parameters.
    parameters:
      cluster:
        description:
          "The name or ARN of the cluster on which to run the task."
        type: string
      task-definition:
        description: |
          "The family and revision (family:revision) or full ARN of the task
          definition to run. If a revision is not specified, the latest ACTIVE
          revision is used."
        type: string
      count:
        description: |
          "The number of instantiations of the specified task to place on your
          cluster. You can specify up to 10 tasks per call."
        type: integer
        default: 1
      started-by:
        description: |
          An optional tag specified when a task is started. For example, if
          you automatically trigger a task to run a batch process job, you
          could apply a unique identifier for that job to your task with the
          startedBy parameter. You can then identify which tasks belong to
          that job by filtering the results of a ListTasks  call with  the
          startedBy value. Up to 36 letters (uppercase and lowercase), num-
          bers, hyphens, and underscores are allowed.
        type: string
        default: ""
      group:
        description: |
          The name of the task group to associate with the task. The default
          value is the family name of the task definition (for example, family:my-family-name).
        type: string
        default: ""
      placement-constraints:
        description: |
          "An array of placement constraint objects to use for the task. You
          can specify up to 10 constraints per task (including constraints in
          the task definition and those specified at runtime). Expected format: type=string,field=string."
        type: string
        default: ""
      placement-strategy:
        description: |
          "The placement strategy objects to use for the task. You can  specify
          a maximum of five strategy rules per task. Expected format: type=string,field=string."
        type: string
        default: ""
      launch-type:
        description: |
          The launch type on which to run your task. For more information, see
          Amazon ECS Launch Types in  the  Amazon Elastic Container Service
          Developer Guide . Possible values EC2, FARGATE.
        type: enum
        enum: ["FARGATE", "EC2"]
        default: "FARGATE"
      platform-version:
        description: |
          "The platform version the task should run. A platform version is only
          specified for tasks using the Fargate launch type."
        type: string
        default: "LATEST"
      network-configuration:
        description: |
          The network  configuration for the task. This parameter is required
          for task definitions that use the awsvpc network mode to receive
          their own elastic network interface, and it is not supported for
          other network modes. For more information, see Task Networking  in
          the Amazon Elastic Container Service Developer Guide .
        type: string
        default: ""
      subnet-ids:
        description: |
          "List of subnet ids"
        type: string
      assign-public-ip:
        description: |
          "Assign a public IP or not"
        type: enum
        enum: ["ENABLED", "DISABLED"]
        default: "DISABLED"
      tags:
        description: |
          "The metadata that you apply to the task to help you categorize and
          organize them. Each tag consists of a key and an optional value,
          both of which you define. Expected format: key=string,value=string."
        type: string
        default: ""
      enable-ecs-managed-tags:
        description: |
          "Specifies whether to enable Amazon ECS managed tags for the task."
        type: boolean
        default: true
      propagate-tags:
        description: |
          "Specifies  whether to propagate the tags from the task definition to
          the task. If no value is specified, the  tags  are  not  propagated.
          Tags can only be propagated to the task during task creation. To add
          tags to a task after task creation, use the  TagResource API action."
        type: boolean
        default: true
    steps:
      - run: echo "Hello"
      - run:
          name: Run Task
          command: |
            aws ecs run-task \
              --cluster <<parameters.cluster>> \
              --task-definition <<parameters.task-definition>> \
              --count <<parameters.count>> \
              --launch-type <<parameters.launch-type>> \
              --platform-version <<parameters.platform-version>> \
              --network-configuration awsvpcConfiguration="{subnets=[<<parameters.subnet-ids>>],securityGroups=[],assignPublicIp=<<parameters.assign-public-ip>>}"
              #--enable-ecs-managed-tags <<parameters.enable-ecs-managed-tags>> \
              #--propagate-tags <<parameters.propagate-tags>>
      

                    #--started-by <<parameters.started-by>> \
              #--group <<parameters.group>> \
              #--placement-constraints <<parameters.placement-constraints>> \
              #--placement-strategy <parameters.placement-strategy>> \
#     steps:
#       - run:
#           name: Register new task definition
#           command: |
#             if [ -n "${CCI_ORB_AWS_ECS_TASK_ROLE}" ]; then
#                 set -- "$@" --task-role-arn "${CCI_ORB_AWS_ECS_TASK_ROLE}"
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_EXECUTION_ROLE}" ]; then
#                 set -- "$@" --execution-role-arn "${CCI_ORB_AWS_ECS_EXECUTION_ROLE}"
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_NETWORK_MODE}" ]; then
#                 set -- "$@" --network-mode "${CCI_ORB_AWS_ECS_NETWORK_MODE}"
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_VOLUMES}" ] && [ "${CCI_ORB_AWS_ECS_VOLUMES}" != "[]" ]; then
#                 set -- "$@" --volumes "${CCI_ORB_AWS_ECS_VOLUMES}"
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_PLACEMENT_CONSTRAINTS}" ] && [ "${CCI_ORB_AWS_ECS_PLACEMENT_CONSTRAINTS}" != "[]" ]; then
#                 set -- "$@" --placement-constraints "${CCI_ORB_AWS_ECS_PLACEMENT_CONSTRAINTS}"
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_REQ_COMP}" ] && [ "${CCI_ORB_AWS_ECS_REQ_COMP}" != "[]" ]; then
#                 set -- "$@" --requires-compatibilities ${CCI_ORB_AWS_ECS_REQ_COMP}
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_TASK_CPU}" ]; then
#                 set -- "$@" --cpu "${CCI_ORB_AWS_ECS_TASK_CPU}"
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_TASK_MEMORY}" ]; then
#                 set -- "$@" --memory "${CCI_ORB_AWS_ECS_TASK_MEMORY}"
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_PID_MODE}" ]; then
#                 set -- "$@" --pid-mode "${CCI_ORB_AWS_ECS_PID_MODE}"
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_IPC_MODE}" ]; then
#                 set -- "$@" --ipc-mode "${CCI_ORB_AWS_ECS_IPC_MODE}"
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_TAGS}" ] && [ "${CCI_ORB_AWS_ECS_TAGS}" != "[]" ]; then
#                 set -- "$@" --tags "${CCI_ORB_AWS_ECS_TAGS}"
#             fi
#             if [ -n "${CCI_ORB_AWS_ECS_PROXY_CONFIGURATION}" ] && [ "${CCI_ORB_AWS_ECS_PROXY_CONFIGURATION}" != "{}" ]; then
#                 set -- "$@" --proxy-configuration "${CCI_ORB_AWS_ECS_PROXY_CONFIGURATION}"
#             fi
#             REVISION=$(aws ecs run-task \
#                 --family << parameters.family >> \
#                 --container-definitions "${CCI_ORB_AWS_ECS_CONTAINER_DEFS}" \
#                 "$@" 
#             echo "Registered task definition: ${REVISION}"
#             echo "export CCI_ORB_AWS_ECS_REGISTERED_TASK_DFN='${REVISION}'" >> $BASH_ENV
jobs:
  run-task:
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - run-task:
          task-definition: orb
          cluster: testing
          subnet-ids: subnet-70ffa93b,subnet-bcc04b93
workflows:
  version: 2
  run-task:
    jobs:
      - run-task